name: Docker Image

on:
  push:
    branches:
      - master
    tags:
      - "v*"

jobs:
  build-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        docker:
          [
            mysql9,
            mysql8,
            mongo4.4,
            postgres17,
            postgres16,
            postgres15,
            postgres14,
            postgres13,
            postgres12,
            postgres11,
            postgres10,
            postgres9,
          ]
    name: ${{ matrix.os }} @ build ${{ matrix.docker }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Build binary
        run: |
          make build_linux_amd64
          make build_linux_arm64
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}-${{ matrix.docker }}
            type=semver,pattern={{major}}.{{minor}}-${{ matrix.docker }}
            type=semver,pattern={{major}}-${{ matrix.docker }}
            type=raw,value=${{ matrix.docker }},enable={{is_default_branch}}

      - name: downcase REPO
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: docker/Dockerfile.${{ matrix.docker }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
